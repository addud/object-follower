#include "implementation.oil"

CPU ATMEL_AT91SAM7S256
{
  OS LEJOS_OSEK
  {
    STATUS = EXTENDED;
    STARTUPHOOK = FALSE;
    ERRORHOOK = FALSE;
    SHUTDOWNHOOK = FALSE;
    PRETASKHOOK = FALSE;
    POSTTASKHOOK = FALSE;
    USEGETSERVICEID = FALSE;
    USEPARAMETERACCESS = FALSE;
    USERESSCHEDULER = FALSE;
  };

  /* Definition of application mode */
  APPMODE appmode1{};

  EVENT TouchOnEvent { MASK = AUTO; };
  EVENT TouchOffEvent { MASK = AUTO; };
  EVENT EdgeDetectedEvent { MASK = AUTO; };
  EVENT TableDetectedEvent { MASK = AUTO; };

  COUNTER SysTimerCnt
  {
    MINCYCLE = 1;
    MAXALLOWEDVALUE = 10000;
    TICKSPERBASE = 1; /* One tick is equal to 1msec */
  };

  ALARM cyclic_alarm_50ms
  {
    COUNTER = SysTimerCnt;
    ACTION = ACTIVATETASK
    {
        TASK = MotorcontrolTask;
    };
    
  AUTOSTART = TRUE
    {
        ALARMTIME = 1;
        CYCLETIME = 50;
        APPMODE = appmode1;
    };
  };

  ALARM cyclic_alarm_10ms
  {
    COUNTER = SysTimerCnt;
    ACTION = ACTIVATETASK
    {
        TASK = ButtonpressTask;
    };
    
  AUTOSTART = TRUE
    {
        ALARMTIME = 1;
        CYCLETIME = 10;
        APPMODE = appmode1;
    };
  };

  ALARM cyclic_alarm_500ms
  {
    COUNTER = SysTimerCnt;
    ACTION = ACTIVATETASK
    {
        TASK = DisplayTask;
    };
    
  AUTOSTART = TRUE
    {
        ALARMTIME = 1;
        CYCLETIME = 500;
        APPMODE = appmode1;
    };
  };

  ALARM cyclic_alarm_100ms
  {
    COUNTER = SysTimerCnt;
    ACTION = ACTIVATETASK
    {
        TASK = DistanceTask;
    };
    
  AUTOSTART = TRUE
    {
        ALARMTIME = 1;
        CYCLETIME = 100;
        APPMODE = appmode1;
    };
  };

  RESOURCE dc_t_access
  {
    RESOURCEPROPERTY = STANDARD;
  };

  TASK MotorcontrolTask
  {
    AUTOSTART = FALSE;
    PRIORITY = 2; /* Smaller value means lower priority */
    ACTIVATION = 1;
    SCHEDULE = FULL;
    STACKSIZE = 512; /* Stack size */

    RESOURCE = dc_t_access;
  };

  TASK DistanceTask
  {
    AUTOSTART = FALSE;
    PRIORITY = 3; /* Smaller value means lower priority */
    ACTIVATION = 1;
    SCHEDULE = FULL;
    STACKSIZE = 512; /* Stack size */

    RESOURCE = dc_t_access;
  };

  TASK ButtonpressTask
  {
    AUTOSTART = FALSE;

    PRIORITY = 4; /* Smaller value means lower priority */
    ACTIVATION = 1;
    SCHEDULE = FULL;
    STACKSIZE = 512; /* Stack size */

    RESOURCE = dc_t_access;
  };

  TASK DisplayTask
  {
    AUTOSTART = FALSE;
    PRIORITY = 5; /* Smaller value means lower priority */
    ACTIVATION = 1;
    SCHEDULE = FULL;
    STACKSIZE = 512; /* Stack size */
  };
};
